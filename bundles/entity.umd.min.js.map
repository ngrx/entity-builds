{"version":3,"sources":["modules/entity/entity.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","entity","ng","core","this","store","DidMutate","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","createStateOperator","mutator","operation","arg","state","clonedEntityState","ids","entities","didMutate","Both","EntitiesOnly","selectIdValue","selectId","key","isDevMode","undefined","console","warn","toString","__values","createUnsortedStateAdapter","addOneMutably","None","addManyMutably","e_1","_a","entities_1","entities_1_1","e_1_1","return","removeManyMutably","keys","filter","map","id","updateManyMutably","updates","newKeys","update","takeNewKey","updated","changes","newKey","hasNewKey","upsertManyMutably","added","entities_2","entities_2_1","e_2_1","e_2","didMutateByUpdated","didMutateByAdded","removeAll","addOne","addMany","addAll","addAllMutably","updateOne","updateOneMutably","updateMany","upsertOne","upsertOneMutably","upsertMany","removeOne","removeOneMutably","removeMany","__values$1","__assign$1","Dictionary","createEntityAdapter","options","sortComparer","instance","stateFactory","createInitialStateFactory","getInitialState","additionalState","selectorsFactory","createSelectorsFactory","getSelectors","selectState","selectIds","selectEntities","selectAll","createSelector","selectTotal","stateAdapter","createSortedStateAdapter","sort","newModels","models","model","merge","didMutateIds","takeUpdatedModel","originalIds_1","updatedIndexes_1","index","every","j","modelId","entityId","slice","forEach","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.1.0+51.sha-7ee46d2\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ngrx/store'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/entity', ['exports', '@ngrx/store', '@angular/core'], factory) :\n    (factory((global.ngrx = global.ngrx || {}, global.ngrx.entity = {}),global['@ngrx/store'],global.ng.core));\n}(this, (function (exports,store,core) { 'use strict';\n\n    function getInitialEntityState() {\n        return {\n            ids: [],\n            entities: {},\n        };\n    }\n    function createInitialStateFactory() {\n        function getInitialState(additionalState) {\n            if (additionalState === void 0) { additionalState = {}; }\n            return Object.assign(getInitialEntityState(), additionalState);\n        }\n        return { getInitialState: getInitialState };\n    }\n\n    function createSelectorsFactory() {\n        function getSelectors(selectState) {\n            var selectIds = function (state) { return state.ids; };\n            var selectEntities = function (state) { return state.entities; };\n            var selectAll = store.createSelector(selectIds, selectEntities, function (ids, entities) {\n                return ids.map(function (id) { return entities[id]; });\n            });\n            var selectTotal = store.createSelector(selectIds, function (ids) { return ids.length; });\n            if (!selectState) {\n                return {\n                    selectIds: selectIds,\n                    selectEntities: selectEntities,\n                    selectAll: selectAll,\n                    selectTotal: selectTotal,\n                };\n            }\n            return {\n                selectIds: store.createSelector(selectState, selectIds),\n                selectEntities: store.createSelector(selectState, selectEntities),\n                selectAll: store.createSelector(selectState, selectAll),\n                selectTotal: store.createSelector(selectState, selectTotal),\n            };\n        }\n        return { getSelectors: getSelectors };\n    }\n\n    var __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var __spread = (undefined && undefined.__spread) || function () {\n        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n        return ar;\n    };\n    var DidMutate;\n    (function (DidMutate) {\n        DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n        DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n        DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n    })(DidMutate || (DidMutate = {}));\n    function createStateOperator(mutator) {\n        return function operation(arg, state) {\n            var clonedEntityState = {\n                ids: __spread(state.ids),\n                entities: __assign({}, state.entities),\n            };\n            var didMutate = mutator(arg, clonedEntityState);\n            if (didMutate === DidMutate.Both) {\n                return Object.assign({}, state, clonedEntityState);\n            }\n            if (didMutate === DidMutate.EntitiesOnly) {\n                return __assign({}, state, { entities: clonedEntityState.entities });\n            }\n            return state;\n        };\n    }\n\n    function selectIdValue(entity, selectId) {\n        var key = selectId(entity);\n        if (core.isDevMode() && key === undefined) {\n            console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n        }\n        return key;\n    }\n\n    var __values = (undefined && undefined.__values) || function (o) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n        if (m) return m.call(o);\n        return {\n            next: function () {\n                if (o && i >= o.length) o = void 0;\n                return { value: o && o[i++], done: !o };\n            }\n        };\n    };\n    function createUnsortedStateAdapter(selectId) {\n        function addOneMutably(entity, state) {\n            var key = selectIdValue(entity, selectId);\n            if (key in state.entities) {\n                return DidMutate.None;\n            }\n            state.ids.push(key);\n            state.entities[key] = entity;\n            return DidMutate.Both;\n        }\n        function addManyMutably(entities, state) {\n            var didMutate = false;\n            try {\n                for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                    var entity = entities_1_1.value;\n                    didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return didMutate ? DidMutate.Both : DidMutate.None;\n            var e_1, _a;\n        }\n        function addAllMutably(entities, state) {\n            state.ids = [];\n            state.entities = {};\n            addManyMutably(entities, state);\n            return DidMutate.Both;\n        }\n        function removeOneMutably(key, state) {\n            return removeManyMutably([key], state);\n        }\n        function removeManyMutably(keys, state) {\n            var didMutate = keys\n                .filter(function (key) { return key in state.entities; })\n                .map(function (key) { return delete state.entities[key]; }).length > 0;\n            if (didMutate) {\n                state.ids = state.ids.filter(function (id) { return id in state.entities; });\n            }\n            return didMutate ? DidMutate.Both : DidMutate.None;\n        }\n        function removeAll(state) {\n            return Object.assign({}, state, {\n                ids: [],\n                entities: {},\n            });\n        }\n        function takeNewKey(keys, update, state) {\n            var original = state.entities[update.id];\n            var updated = Object.assign({}, original, update.changes);\n            var newKey = selectIdValue(updated, selectId);\n            var hasNewKey = newKey !== update.id;\n            if (hasNewKey) {\n                keys[update.id] = newKey;\n                delete state.entities[update.id];\n            }\n            state.entities[newKey] = updated;\n            return hasNewKey;\n        }\n        function updateOneMutably(update, state) {\n            return updateManyMutably([update], state);\n        }\n        function updateManyMutably(updates, state) {\n            var newKeys = {};\n            updates = updates.filter(function (update) { return update.id in state.entities; });\n            var didMutateEntities = updates.length > 0;\n            if (didMutateEntities) {\n                var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\n                if (didMutateIds) {\n                    state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\n                    return DidMutate.Both;\n                }\n                else {\n                    return DidMutate.EntitiesOnly;\n                }\n            }\n            return DidMutate.None;\n        }\n        function upsertOneMutably(entity, state) {\n            return upsertManyMutably([entity], state);\n        }\n        function upsertManyMutably(entities, state) {\n            var added = [];\n            var updated = [];\n            try {\n                for (var entities_2 = __values(entities), entities_2_1 = entities_2.next(); !entities_2_1.done; entities_2_1 = entities_2.next()) {\n                    var entity = entities_2_1.value;\n                    var id = selectIdValue(entity, selectId);\n                    if (id in state.entities) {\n                        updated.push({ id: id, changes: entity });\n                    }\n                    else {\n                        added.push(entity);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (entities_2_1 && !entities_2_1.done && (_a = entities_2.return)) _a.call(entities_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            var didMutateByUpdated = updateManyMutably(updated, state);\n            var didMutateByAdded = addManyMutably(added, state);\n            switch (true) {\n                case didMutateByAdded === DidMutate.None &&\n                    didMutateByUpdated === DidMutate.None:\n                    return DidMutate.None;\n                case didMutateByAdded === DidMutate.Both ||\n                    didMutateByUpdated === DidMutate.Both:\n                    return DidMutate.Both;\n                default:\n                    return DidMutate.EntitiesOnly;\n            }\n            var e_2, _a;\n        }\n        return {\n            removeAll: removeAll,\n            addOne: createStateOperator(addOneMutably),\n            addMany: createStateOperator(addManyMutably),\n            addAll: createStateOperator(addAllMutably),\n            updateOne: createStateOperator(updateOneMutably),\n            updateMany: createStateOperator(updateManyMutably),\n            upsertOne: createStateOperator(upsertOneMutably),\n            upsertMany: createStateOperator(upsertManyMutably),\n            removeOne: createStateOperator(removeOneMutably),\n            removeMany: createStateOperator(removeManyMutably),\n        };\n    }\n\n    var __values$1 = (undefined && undefined.__values) || function (o) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n        if (m) return m.call(o);\n        return {\n            next: function () {\n                if (o && i >= o.length) o = void 0;\n                return { value: o && o[i++], done: !o };\n            }\n        };\n    };\n    function createSortedStateAdapter(selectId, sort) {\n        var _a = createUnsortedStateAdapter(selectId), removeOne = _a.removeOne, removeMany = _a.removeMany, removeAll = _a.removeAll;\n        function addOneMutably(entity, state) {\n            return addManyMutably([entity], state);\n        }\n        function addManyMutably(newModels, state) {\n            var models = newModels.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });\n            if (models.length === 0) {\n                return DidMutate.None;\n            }\n            else {\n                merge(models, state);\n                return DidMutate.Both;\n            }\n        }\n        function addAllMutably(models, state) {\n            state.entities = {};\n            state.ids = [];\n            addManyMutably(models, state);\n            return DidMutate.Both;\n        }\n        function updateOneMutably(update, state) {\n            return updateManyMutably([update], state);\n        }\n        function takeUpdatedModel(models, update, state) {\n            if (!(update.id in state.entities)) {\n                return false;\n            }\n            var original = state.entities[update.id];\n            var updated = Object.assign({}, original, update.changes);\n            var newKey = selectIdValue(updated, selectId);\n            delete state.entities[update.id];\n            models.push(updated);\n            return newKey !== update.id;\n        }\n        function updateManyMutably(updates, state) {\n            var models = [];\n            var didMutateIds = updates.filter(function (update) { return takeUpdatedModel(models, update, state); }).length >\n                0;\n            if (models.length === 0) {\n                return DidMutate.None;\n            }\n            else {\n                var originalIds_1 = state.ids;\n                var updatedIndexes_1 = [];\n                state.ids = state.ids.filter(function (id, index) {\n                    if (id in state.entities) {\n                        return true;\n                    }\n                    else {\n                        updatedIndexes_1.push(index);\n                        return false;\n                    }\n                });\n                merge(models, state);\n                if (!didMutateIds &&\n                    updatedIndexes_1.every(function (i) { return state.ids[i] === originalIds_1[i]; })) {\n                    return DidMutate.EntitiesOnly;\n                }\n                else {\n                    return DidMutate.Both;\n                }\n            }\n        }\n        function upsertOneMutably(entity, state) {\n            return upsertManyMutably([entity], state);\n        }\n        function upsertManyMutably(entities, state) {\n            var added = [];\n            var updated = [];\n            try {\n                for (var entities_1 = __values$1(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                    var entity = entities_1_1.value;\n                    var id = selectIdValue(entity, selectId);\n                    if (id in state.entities) {\n                        updated.push({ id: id, changes: entity });\n                    }\n                    else {\n                        added.push(entity);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var didMutateByUpdated = updateManyMutably(updated, state);\n            var didMutateByAdded = addManyMutably(added, state);\n            switch (true) {\n                case didMutateByAdded === DidMutate.None &&\n                    didMutateByUpdated === DidMutate.None:\n                    return DidMutate.None;\n                case didMutateByAdded === DidMutate.Both ||\n                    didMutateByUpdated === DidMutate.Both:\n                    return DidMutate.Both;\n                default:\n                    return DidMutate.EntitiesOnly;\n            }\n            var e_1, _a;\n        }\n        function merge(models, state) {\n            models.sort(sort);\n            var ids = [];\n            var i = 0;\n            var j = 0;\n            while (i < models.length && j < state.ids.length) {\n                var model = models[i];\n                var modelId = selectIdValue(model, selectId);\n                var entityId = state.ids[j];\n                var entity = state.entities[entityId];\n                if (sort(model, entity) <= 0) {\n                    ids.push(modelId);\n                    i++;\n                }\n                else {\n                    ids.push(entityId);\n                    j++;\n                }\n            }\n            if (i < models.length) {\n                state.ids = ids.concat(models.slice(i).map(selectId));\n            }\n            else {\n                state.ids = ids.concat(state.ids.slice(j));\n            }\n            models.forEach(function (model, i) {\n                state.entities[selectId(model)] = model;\n            });\n        }\n        return {\n            removeOne: removeOne,\n            removeMany: removeMany,\n            removeAll: removeAll,\n            addOne: createStateOperator(addOneMutably),\n            updateOne: createStateOperator(updateOneMutably),\n            upsertOne: createStateOperator(upsertOneMutably),\n            addAll: createStateOperator(addAllMutably),\n            addMany: createStateOperator(addManyMutably),\n            updateMany: createStateOperator(updateManyMutably),\n            upsertMany: createStateOperator(upsertManyMutably),\n        };\n    }\n\n    var __assign$1 = (undefined && undefined.__assign) || Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    function createEntityAdapter(options) {\n        if (options === void 0) { options = {}; }\n        var _a = __assign$1({ sortComparer: false, selectId: function (instance) { return instance.id; } }, options), selectId = _a.selectId, sortComparer = _a.sortComparer;\n        var stateFactory = createInitialStateFactory();\n        var selectorsFactory = createSelectorsFactory();\n        var stateAdapter = sortComparer\n            ? createSortedStateAdapter(selectId, sortComparer)\n            : createUnsortedStateAdapter(selectId);\n        return __assign$1({ selectId: selectId,\n            sortComparer: sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n    }\n\n    var Dictionary = /** @class */ (function () {\n        function Dictionary() {\n        }\n        return Dictionary;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.createEntityAdapter = createEntityAdapter;\n    exports.Dictionary = Dictionary;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=entity.umd.js.map\n"]}