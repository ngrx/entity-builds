{"version":3,"sources":["modules/entity/entity.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","entity","ng","core","this","store","DidMutate","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","createStateOperator","mutator","operation","arg","state","clonedEntityState","ids","entities","didMutate","Both","EntitiesOnly","selectIdValue","selectId","key","isDevMode","undefined","console","warn","toString","__values","createUnsortedStateAdapter","addOneMutably","None","addManyMutably","e_1","_a","entities_1","entities_1_1","e_1_1","return","removeManyMutably","keysOrPredicate","Array","filter","map","id","updateManyMutably","updates","newKeys","update","takeNewKey","keys","updated","changes","newKey","hasNewKey","upsertManyMutably","e_2","added","entities_2","entities_2_1","e_2_1","didMutateByUpdated","didMutateByAdded","removeAll","addOne","addMany","addAll","addAllMutably","updateOne","updateOneMutably","updateMany","upsertOne","upsertOneMutably","upsertMany","removeOne","removeOneMutably","removeMany","mapMutably","reduce","change","__values$1","__assign$1","Dictionary","createEntityAdapter","options","sortComparer","instance","stateFactory","createInitialStateFactory","getInitialState","additionalState","selectorsFactory","createSelectorsFactory","getSelectors","selectState","selectIds","selectEntities","selectAll","createSelector","selectTotal","stateAdapter","createSortedStateAdapter","sort","newModels","models","model","merge","didMutateIds","takeUpdatedModel","originalIds_1","updatedIndexes_1","index","every","j","modelId","entityId","slice","forEach","updatesOrMap","defineProperty"],"mappings":";;;;;CAKC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,eAAgBA,QAAQ,kBAC9F,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,eAAgB,CAAC,UAAW,cAAe,iBAAkBJ,GACvFA,IAAzBD,EAASA,GAAUO,MAAsBC,KAAOR,EAAOQ,MAAQ,GAAIR,EAAOQ,KAAKC,OAAS,IAAKT,EAAO,eAAgBA,EAAOU,GAAGC,MAHnI,CAIEC,KAAM,SAAUV,EAASW,EAAOF,GAAQ,aA0CtC,IA+BIG,EA/BAC,EAAgD,WAShD,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEKU,MAAMhB,KAAMU,YAE5BO,EAA4C,SAAUC,EAAGT,GACzD,IAAIU,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3Bf,EAAIW,EAAEJ,KAAKG,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANf,GAAgBA,KAAM,MAAQa,EAAId,EAAEiB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,GAC7B,QACI,IACQP,IAAMA,EAAEI,OAASP,EAAIX,EAAU,SAAIW,EAAEJ,KAAKP,GAElD,QAAU,GAAIe,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,GAEPM,EAAgD,WAChD,IAAK,IAAIN,EAAK,GAAIhB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAKgB,EAAKA,EAAGO,OAAOd,EAAOP,UAAUF,KACpF,OAAOgB,GAQX,SAASQ,EAAoBC,GACzB,OAAO,SAASC,EAAUC,EAAKC,GAC3B,IAAIC,EAAoB,CACpBC,IAAKR,EAASM,EAAME,KACpBC,SAAUpC,EAAS,GAAIiC,EAAMG,WAE7BC,EAAYP,EAAQE,EAAKE,GAC7B,OAAIG,IAActC,EAAUuC,KACjBrC,OAAOC,OAAO,GAAI+B,EAAOC,GAEhCG,IAActC,EAAUwC,aACjBvC,EAAS,GAAIiC,EAAO,CAAEG,SAAUF,EAAkBE,WAEtDH,GAIf,SAASO,EAAc9C,EAAQ+C,GAC3B,IAAIC,EAAMD,EAAS/C,GAInB,OAHIE,EAAK+C,kBAAuBC,IAARF,GACpBG,QAAQC,KAAK,uFAAwF,kEAAmE,8BAA+BpD,EAAQ,iCAAkC+C,EAASM,YAEvPL,GA3BX,SAAW3C,GACPA,EAAUA,EAAwB,aAAI,GAAK,eAC3CA,EAAUA,EAAgB,KAAI,GAAK,OACnCA,EAAUA,EAAgB,KAAI,GAAK,OAHvC,CAIGA,IAAcA,EAAY,KA0B7B,IAAIiD,EAAgD,SAAUjC,GAC1D,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWb,EAAI,EAChE,OAAIW,EAAUA,EAAEJ,KAAKG,GACd,CACHO,KAAM,WAEF,OADIP,GAAKV,GAAKU,EAAEP,SAAQO,OAAI,GACrB,CAAEU,MAAOV,GAAKA,EAAEV,KAAMkB,MAAOR,MAIhD,SAASkC,EAA2BR,GAChC,SAASS,EAAcxD,EAAQuC,GAC3B,IAAIS,EAAMF,EAAc9C,EAAQ+C,GAChC,OAAIC,KAAOT,EAAMG,SACNrC,EAAUoD,MAErBlB,EAAME,IAAIX,KAAKkB,GACfT,EAAMG,SAASM,GAAOhD,EACfK,EAAUuC,MAErB,SAASc,EAAehB,EAAUH,GAC9B,IAAIoB,EAAKC,EACLjB,GAAY,EAChB,IACI,IAAK,IAAIkB,EAAaP,EAASZ,GAAWoB,EAAeD,EAAWjC,QAASkC,EAAajC,KAAMiC,EAAeD,EAAWjC,OAEtHe,EAAYa,EADCM,EAAa/B,MACQQ,KAAWlC,EAAUoD,MAAQd,EAGvE,MAAOoB,GAASJ,EAAM,CAAE3B,MAAO+B,GAC/B,QACI,IACQD,IAAiBA,EAAajC,OAAS+B,EAAKC,EAAWG,SAASJ,EAAG1C,KAAK2C,GAEhF,QAAU,GAAIF,EAAK,MAAMA,EAAI3B,OAEjC,OAAOW,EAAYtC,EAAUuC,KAAOvC,EAAUoD,KAWlD,SAASQ,EAAkBC,EAAiB3B,GACxC,IAGII,GAHOuB,aAA2BC,MAChCD,EACA3B,EAAME,IAAI2B,OAAO,SAAUpB,GAAO,OAAOkB,EAAgB3B,EAAMG,SAASM,OAEzEoB,OAAO,SAAUpB,GAAO,OAAOA,KAAOT,EAAMG,WAC5C2B,IAAI,SAAUrB,GAAO,cAAcT,EAAMG,SAASM,KAASlC,OAAS,EAIzE,OAHI6B,IACAJ,EAAME,IAAMF,EAAME,IAAI2B,OAAO,SAAUE,GAAM,OAAOA,KAAM/B,EAAMG,YAE7DC,EAAYtC,EAAUuC,KAAOvC,EAAUoD,KAuBlD,SAASc,EAAkBC,EAASjC,GAChC,IAAIkC,EAAU,GAGd,OAFAD,EAAUA,EAAQJ,OAAO,SAAUM,GAAU,OAAOA,EAAOJ,MAAM/B,EAAMG,YACvC5B,OAAS,EAElB0D,EAAQJ,OAAO,SAAUM,GAAU,OApB9D,SAASC,EAAWC,EAAMF,EAAQnC,GAC9B,IACIsC,EAAUtE,OAAOC,OAAO,GADb+B,EAAMG,SAASgC,EAAOJ,IACKI,EAAOI,SAC7CC,EAASjC,EAAc+B,EAAS9B,GAChCiC,EAAYD,IAAWL,EAAOJ,GAMlC,OALIU,IACAJ,EAAKF,EAAOJ,IAAMS,SACXxC,EAAMG,SAASgC,EAAOJ,KAEjC/B,EAAMG,SAASqC,GAAUF,EAClBG,EAU0DL,CAAWF,EAASC,EAAQnC,KAAWzB,OAAS,GAEzGyB,EAAME,IAAMF,EAAME,IAAI4B,IAAI,SAAUC,GAAM,OAAOG,EAAQH,IAAOA,IACzDjE,EAAUuC,MAGVvC,EAAUwC,aAGlBxC,EAAUoD,KAmBrB,SAASwB,EAAkBvC,EAAUH,GACjC,IAAI2C,EAAKtB,EACLuB,EAAQ,GACRN,EAAU,GACd,IACI,IAAK,IAAIO,EAAa9B,EAASZ,GAAW2C,EAAeD,EAAWxD,QAASyD,EAAaxD,KAAMwD,EAAeD,EAAWxD,OAAQ,CAC9H,IAAI5B,EAASqF,EAAatD,MACtBuC,EAAKxB,EAAc9C,EAAQ+C,GAC3BuB,KAAM/B,EAAMG,SACZmC,EAAQ/C,KAAK,CAAEwC,GAAIA,EAAIQ,QAAS9E,IAGhCmF,EAAMrD,KAAK9B,IAIvB,MAAOsF,GAASJ,EAAM,CAAElD,MAAOsD,GAC/B,QACI,IACQD,IAAiBA,EAAaxD,OAAS+B,EAAKwB,EAAWpB,SAASJ,EAAG1C,KAAKkE,GAEhF,QAAU,GAAIF,EAAK,MAAMA,EAAIlD,OAEjC,IAAIuD,EAAqBhB,EAAkBM,EAAStC,GAChDiD,EAAmB9B,EAAeyB,EAAO5C,GAC7C,QAAQ,GACJ,KAAKiD,IAAqBnF,EAAUoD,MAChC8B,IAAuBlF,EAAUoD,KACjC,OAAOpD,EAAUoD,KACrB,KAAK+B,IAAqBnF,EAAUuC,MAChC2C,IAAuBlF,EAAUuC,KACjC,OAAOvC,EAAUuC,KACrB,QACI,OAAOvC,EAAUwC,cAG7B,MAAO,CACH4C,UA3FJ,SAASA,EAAUlD,GACf,OAAOhC,OAAOC,OAAO,GAAI+B,EAAO,CAC5BE,IAAK,GACLC,SAAU,MAyFdgD,OAAQvD,EAAoBqB,GAC5BmC,QAASxD,EAAoBuB,GAC7BkC,OAAQzD,EAnHZ,SAAS0D,EAAcnD,EAAUH,GAI7B,OAHAA,EAAME,IAAM,GACZF,EAAMG,SAAW,GACjBgB,EAAehB,EAAUH,GAClBlC,EAAUuC,OAgHjBkD,UAAW3D,EA7Ef,SAAS4D,EAAiBrB,EAAQnC,GAC9B,OAAOgC,EAAkB,CAACG,GAASnC,KA6EnCyD,WAAY7D,EAAoBoC,GAChC0B,UAAW9D,EA9Cf,SAAS+D,EAAiBlG,EAAQuC,GAC9B,OAAO0C,EAAkB,CAACjF,GAASuC,KA8CnC4D,WAAYhE,EAAoB8C,GAChCmB,UAAWjE,EAlHf,SAASkE,EAAiBrD,EAAKT,GAC3B,OAAO0B,EAAkB,CAACjB,GAAMT,KAkHhC+D,WAAYnE,EAAoB8B,GAChCI,IAAKlC,EAhET,SAASoE,EAAWlC,EAAK9B,GAYrB,OAAOgC,EAXOhC,EAAME,IAAI+D,OAAO,SAAU1B,EAASR,GAC9C,IAAImC,EAASpC,EAAI9B,EAAMG,SAAS4B,IAIhC,OAHImC,IAAWlE,EAAMG,SAAS4B,IAC1BQ,EAAQhD,KAAK,CAAEwC,GAAIA,EAAIQ,QAAS2B,IAE7B3B,GACR,IACmBV,OAAO,SAAUR,GAEnC,OADSA,EAAGU,MACC/B,EAAMG,WAEWH,MAwD1C,IAAImE,EAAkD,SAAUrF,GAC5D,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWb,EAAI,EAChE,OAAIW,EAAUA,EAAEJ,KAAKG,GACd,CACHO,KAAM,WAEF,OADIP,GAAKV,GAAKU,EAAEP,SAAQO,OAAI,GACrB,CAAEU,MAAOV,GAAKA,EAAEV,KAAMkB,MAAOR,MAiK5CsF,EAAkD,WASlD,OARAA,EAAapG,OAAOC,QAAU,SAASC,GACnC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,IAEOU,MAAMhB,KAAMU,YAc9B+F,EACA,SAASA,MAebnH,EAAQoH,oBA5BR,SAASA,EAAoBC,QACT,IAAZA,IAAsBA,EAAU,IACpC,IAAIlD,EAAK+C,EAAW,CAAEI,cAAc,EAAOhE,SAAU,SAAUiE,GAAY,OAAOA,EAAS1C,KAASwC,GAAU/D,EAAWa,EAAGb,SAAUgE,EAAenD,EAAGmD,aACpJE,EAzbR,SAASC,IAKL,MAAO,CAAEC,gBAJT,SAASA,EAAgBC,GAErB,YADwB,IAApBA,IAA8BA,EAAkB,IAC7C7G,OAAOC,OARX,CACHiC,IAAK,GACLC,SAAU,IAMoC0E,KAsb/BF,GACfG,EAlbR,SAASC,IAuBL,MAAO,CAAEC,aAtBT,SAASA,EAAaC,GAClB,IAAIC,EAAY,SAAUlF,GAAS,OAAOA,EAAME,KAC5CiF,EAAiB,SAAUnF,GAAS,OAAOA,EAAMG,UACjDiF,EAAYvH,EAAMwH,eAAeH,EAAWC,EAAgB,SAAUjF,EAAKC,GAC3E,OAAOD,EAAI4B,IAAI,SAAUC,GAAM,OAAO5B,EAAS4B,OAE/CuD,EAAczH,EAAMwH,eAAeH,EAAW,SAAUhF,GAAO,OAAOA,EAAI3B,SAC9E,OAAK0G,EAQE,CACHC,UAAWrH,EAAMwH,eAAeJ,EAAaC,GAC7CC,eAAgBtH,EAAMwH,eAAeJ,EAAaE,GAClDC,UAAWvH,EAAMwH,eAAeJ,EAAaG,GAC7CE,YAAazH,EAAMwH,eAAeJ,EAAaK,IAXxC,CACHJ,UAAWA,EACXC,eAAgBA,EAChBC,UAAWA,EACXE,YAAaA,KAqaFP,GACnBQ,EAAef,EA7KvB,SAASgB,EAAyBhF,EAAUiF,GACxC,IAAIpE,EAAKL,EAA2BR,GAIpC,SAASW,EAAeuE,EAAW1F,GAC/B,IAAI2F,EAASD,EAAU7D,OAAO,SAAU+D,GAAS,QAASrF,EAAcqF,EAAOpF,KAAaR,EAAMG,YAClG,OAAsB,IAAlBwF,EAAOpH,OACAT,EAAUoD,MAGjB2E,EAAMF,EAAQ3F,GACPlC,EAAUuC,MAuBzB,SAAS2B,EAAkBC,EAASjC,GAChC,IAAI2F,EAAS,GACTG,EAAe7D,EAAQJ,OAAO,SAAUM,GAAU,OAb1D,SAAS4D,EAAiBJ,EAAQxD,EAAQnC,GACtC,KAAMmC,EAAOJ,MAAM/B,EAAMG,UACrB,OAAO,EAEX,IACImC,EAAUtE,OAAOC,OAAO,GADb+B,EAAMG,SAASgC,EAAOJ,IACKI,EAAOI,SAC7CC,EAASjC,EAAc+B,EAAS9B,GAGpC,cAFOR,EAAMG,SAASgC,EAAOJ,IAC7B4D,EAAOpG,KAAK+C,GACLE,IAAWL,EAAOJ,GAIoCgE,CAAiBJ,EAAQxD,EAAQnC,KAAWzB,OACrG,EACJ,GAAsB,IAAlBoH,EAAOpH,OACP,OAAOT,EAAUoD,KAGjB,IAAI8E,EAAgBhG,EAAME,IACtB+F,EAAmB,GAWvB,OAVAjG,EAAME,IAAMF,EAAME,IAAI2B,OAAO,SAAUE,EAAImE,GACvC,OAAInE,KAAM/B,EAAMG,WAIZ8F,EAAiB1G,KAAK2G,IACf,KAGfL,EAAMF,EAAQ3F,IACT8F,GACDG,EAAiBE,MAAM,SAAU/H,GAAK,OAAO4B,EAAME,IAAI9B,KAAO4H,EAAc5H,KACrEN,EAAUwC,aAGVxC,EAAUuC,KAiB7B,SAASqC,EAAkBvC,EAAUH,GACjC,IAAIoB,EAAKC,EACLuB,EAAQ,GACRN,EAAU,GACd,IACI,IAAK,IAAIhB,EAAa6C,EAAWhE,GAAWoB,EAAeD,EAAWjC,QAASkC,EAAajC,KAAMiC,EAAeD,EAAWjC,OAAQ,CAChI,IAAI5B,EAAS8D,EAAa/B,MACtBuC,EAAKxB,EAAc9C,EAAQ+C,GAC3BuB,KAAM/B,EAAMG,SACZmC,EAAQ/C,KAAK,CAAEwC,GAAIA,EAAIQ,QAAS9E,IAGhCmF,EAAMrD,KAAK9B,IAIvB,MAAO+D,GAASJ,EAAM,CAAE3B,MAAO+B,GAC/B,QACI,IACQD,IAAiBA,EAAajC,OAAS+B,EAAKC,EAAWG,SAASJ,EAAG1C,KAAK2C,GAEhF,QAAU,GAAIF,EAAK,MAAMA,EAAI3B,OAEjC,IAAIuD,EAAqBhB,EAAkBM,EAAStC,GAChDiD,EAAmB9B,EAAeyB,EAAO5C,GAC7C,QAAQ,GACJ,KAAKiD,IAAqBnF,EAAUoD,MAChC8B,IAAuBlF,EAAUoD,KACjC,OAAOpD,EAAUoD,KACrB,KAAK+B,IAAqBnF,EAAUuC,MAChC2C,IAAuBlF,EAAUuC,KACjC,OAAOvC,EAAUuC,KACrB,QACI,OAAOvC,EAAUwC,cAG7B,SAASuF,EAAMF,EAAQ3F,GACnB2F,EAAOF,KAAKA,GAIZ,IAHA,IAAIvF,EAAM,GACN9B,EAAI,EACJgI,EAAI,EACDhI,EAAIuH,EAAOpH,QAAU6H,EAAIpG,EAAME,IAAI3B,QAAQ,CAC9C,IAAIqH,EAAQD,EAAOvH,GACfiI,EAAU9F,EAAcqF,EAAOpF,GAC/B8F,EAAWtG,EAAME,IAAIkG,GAErBX,EAAKG,EADI5F,EAAMG,SAASmG,KACD,GACvBpG,EAAIX,KAAK8G,GACTjI,MAGA8B,EAAIX,KAAK+G,GACTF,KAIJpG,EAAME,IAAMA,EAAIP,OADhBvB,EAAIuH,EAAOpH,OACYoH,EAAOY,MAAMnI,GAAG0D,IAAItB,GAGpBR,EAAME,IAAIqG,MAAMH,IAE3CT,EAAOa,QAAQ,SAAUZ,EAAOxH,GAC5B4B,EAAMG,SAASK,EAASoF,IAAUA,IAG1C,MAAO,CACH/B,UA9IuDxC,EAAGwC,UA+I1DE,WA/IkF1C,EAAG0C,WAgJrFb,UAhJ6G7B,EAAG6B,UAiJhHC,OAAQvD,EAhJZ,SAASqB,EAAcxD,EAAQuC,GAC3B,OAAOmB,EAAe,CAAC1D,GAASuC,KAgJhCuD,UAAW3D,EA9Hf,SAAS4D,EAAiBrB,EAAQnC,GAC9B,OAAOgC,EAAkB,CAACG,GAASnC,KA8HnC0D,UAAW9D,EA1Ef,SAAS+D,EAAiBlG,EAAQuC,GAC9B,OAAO0C,EAAkB,CAACjF,GAASuC,KA0EnCqD,OAAQzD,EAtIZ,SAAS0D,EAAcqC,EAAQ3F,GAI3B,OAHAA,EAAMG,SAAW,GACjBH,EAAME,IAAM,GACZiB,EAAewE,EAAQ3F,GAChBlC,EAAUuC,OAmIjB+C,QAASxD,EAAoBuB,GAC7BsC,WAAY7D,EAAoBoC,GAChC4B,WAAYhE,EAAoB8C,GAChCZ,IAAKlC,EAzFT,SAASoE,EAAWyC,EAAczG,GAQ9B,OAAOgC,EAPOhC,EAAME,IAAI+D,OAAO,SAAU1B,EAASR,GAC9C,IAAImC,EAASuC,EAAazG,EAAMG,SAAS4B,IAIzC,OAHImC,IAAWlE,EAAMG,SAAS4B,IAC1BQ,EAAQhD,KAAK,CAAEwC,GAAIA,EAAIQ,QAAS2B,IAE7B3B,GACR,IAC+BvC,MAsGhCwF,CAAyBhF,EAAUgE,GACnCxD,EAA2BR,GACjC,OAAO4D,EAAW,CAAE5D,SAAUA,EAC1BgE,aAAcA,GAAgBE,EAAcI,EAAkBS,IAoBtErI,EAAQmH,WAAaA,EAErBrG,OAAO0I,eAAexJ,EAAS,aAAc,CAAEsC,OAAO","sourcesContent":["/**\n * @license NgRx 7.4.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@ngrx/store'), require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/entity', ['exports', '@ngrx/store', '@angular/core'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.entity = {}), global['@ngrx/store'], global.ng.core));\n}(this, function (exports, store, core) { 'use strict';\n\n    function getInitialEntityState() {\n        return {\n            ids: [],\n            entities: {},\n        };\n    }\n    function createInitialStateFactory() {\n        function getInitialState(additionalState) {\n            if (additionalState === void 0) { additionalState = {}; }\n            return Object.assign(getInitialEntityState(), additionalState);\n        }\n        return { getInitialState: getInitialState };\n    }\n\n    function createSelectorsFactory() {\n        function getSelectors(selectState) {\n            var selectIds = function (state) { return state.ids; };\n            var selectEntities = function (state) { return state.entities; };\n            var selectAll = store.createSelector(selectIds, selectEntities, function (ids, entities) {\n                return ids.map(function (id) { return entities[id]; });\n            });\n            var selectTotal = store.createSelector(selectIds, function (ids) { return ids.length; });\n            if (!selectState) {\n                return {\n                    selectIds: selectIds,\n                    selectEntities: selectEntities,\n                    selectAll: selectAll,\n                    selectTotal: selectTotal,\n                };\n            }\n            return {\n                selectIds: store.createSelector(selectState, selectIds),\n                selectEntities: store.createSelector(selectState, selectEntities),\n                selectAll: store.createSelector(selectState, selectAll),\n                selectTotal: store.createSelector(selectState, selectTotal),\n            };\n        }\n        return { getSelectors: getSelectors };\n    }\n\n    var __assign = (undefined && undefined.__assign) || function () {\n        __assign = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    var __read = (undefined && undefined.__read) || function (o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m) return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n        }\n        catch (error) { e = { error: error }; }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\n            }\n            finally { if (e) throw e.error; }\n        }\n        return ar;\n    };\n    var __spread = (undefined && undefined.__spread) || function () {\n        for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n        return ar;\n    };\n    var DidMutate;\n    (function (DidMutate) {\n        DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n        DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n        DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n    })(DidMutate || (DidMutate = {}));\n    function createStateOperator(mutator) {\n        return function operation(arg, state) {\n            var clonedEntityState = {\n                ids: __spread(state.ids),\n                entities: __assign({}, state.entities),\n            };\n            var didMutate = mutator(arg, clonedEntityState);\n            if (didMutate === DidMutate.Both) {\n                return Object.assign({}, state, clonedEntityState);\n            }\n            if (didMutate === DidMutate.EntitiesOnly) {\n                return __assign({}, state, { entities: clonedEntityState.entities });\n            }\n            return state;\n        };\n    }\n\n    function selectIdValue(entity, selectId) {\n        var key = selectId(entity);\n        if (core.isDevMode() && key === undefined) {\n            console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n        }\n        return key;\n    }\n\n    var __values = (undefined && undefined.__values) || function (o) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n        if (m) return m.call(o);\n        return {\n            next: function () {\n                if (o && i >= o.length) o = void 0;\n                return { value: o && o[i++], done: !o };\n            }\n        };\n    };\n    function createUnsortedStateAdapter(selectId) {\n        function addOneMutably(entity, state) {\n            var key = selectIdValue(entity, selectId);\n            if (key in state.entities) {\n                return DidMutate.None;\n            }\n            state.ids.push(key);\n            state.entities[key] = entity;\n            return DidMutate.Both;\n        }\n        function addManyMutably(entities, state) {\n            var e_1, _a;\n            var didMutate = false;\n            try {\n                for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                    var entity = entities_1_1.value;\n                    didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return didMutate ? DidMutate.Both : DidMutate.None;\n        }\n        function addAllMutably(entities, state) {\n            state.ids = [];\n            state.entities = {};\n            addManyMutably(entities, state);\n            return DidMutate.Both;\n        }\n        function removeOneMutably(key, state) {\n            return removeManyMutably([key], state);\n        }\n        function removeManyMutably(keysOrPredicate, state) {\n            var keys = keysOrPredicate instanceof Array\n                ? keysOrPredicate\n                : state.ids.filter(function (key) { return keysOrPredicate(state.entities[key]); });\n            var didMutate = keys\n                .filter(function (key) { return key in state.entities; })\n                .map(function (key) { return delete state.entities[key]; }).length > 0;\n            if (didMutate) {\n                state.ids = state.ids.filter(function (id) { return id in state.entities; });\n            }\n            return didMutate ? DidMutate.Both : DidMutate.None;\n        }\n        function removeAll(state) {\n            return Object.assign({}, state, {\n                ids: [],\n                entities: {},\n            });\n        }\n        function takeNewKey(keys, update, state) {\n            var original = state.entities[update.id];\n            var updated = Object.assign({}, original, update.changes);\n            var newKey = selectIdValue(updated, selectId);\n            var hasNewKey = newKey !== update.id;\n            if (hasNewKey) {\n                keys[update.id] = newKey;\n                delete state.entities[update.id];\n            }\n            state.entities[newKey] = updated;\n            return hasNewKey;\n        }\n        function updateOneMutably(update, state) {\n            return updateManyMutably([update], state);\n        }\n        function updateManyMutably(updates, state) {\n            var newKeys = {};\n            updates = updates.filter(function (update) { return update.id in state.entities; });\n            var didMutateEntities = updates.length > 0;\n            if (didMutateEntities) {\n                var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\n                if (didMutateIds) {\n                    state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\n                    return DidMutate.Both;\n                }\n                else {\n                    return DidMutate.EntitiesOnly;\n                }\n            }\n            return DidMutate.None;\n        }\n        function mapMutably(map, state) {\n            var changes = state.ids.reduce(function (changes, id) {\n                var change = map(state.entities[id]);\n                if (change !== state.entities[id]) {\n                    changes.push({ id: id, changes: change });\n                }\n                return changes;\n            }, []);\n            var updates = changes.filter(function (_a) {\n                var id = _a.id;\n                return id in state.entities;\n            });\n            return updateManyMutably(updates, state);\n        }\n        function upsertOneMutably(entity, state) {\n            return upsertManyMutably([entity], state);\n        }\n        function upsertManyMutably(entities, state) {\n            var e_2, _a;\n            var added = [];\n            var updated = [];\n            try {\n                for (var entities_2 = __values(entities), entities_2_1 = entities_2.next(); !entities_2_1.done; entities_2_1 = entities_2.next()) {\n                    var entity = entities_2_1.value;\n                    var id = selectIdValue(entity, selectId);\n                    if (id in state.entities) {\n                        updated.push({ id: id, changes: entity });\n                    }\n                    else {\n                        added.push(entity);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (entities_2_1 && !entities_2_1.done && (_a = entities_2.return)) _a.call(entities_2);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            var didMutateByUpdated = updateManyMutably(updated, state);\n            var didMutateByAdded = addManyMutably(added, state);\n            switch (true) {\n                case didMutateByAdded === DidMutate.None &&\n                    didMutateByUpdated === DidMutate.None:\n                    return DidMutate.None;\n                case didMutateByAdded === DidMutate.Both ||\n                    didMutateByUpdated === DidMutate.Both:\n                    return DidMutate.Both;\n                default:\n                    return DidMutate.EntitiesOnly;\n            }\n        }\n        return {\n            removeAll: removeAll,\n            addOne: createStateOperator(addOneMutably),\n            addMany: createStateOperator(addManyMutably),\n            addAll: createStateOperator(addAllMutably),\n            updateOne: createStateOperator(updateOneMutably),\n            updateMany: createStateOperator(updateManyMutably),\n            upsertOne: createStateOperator(upsertOneMutably),\n            upsertMany: createStateOperator(upsertManyMutably),\n            removeOne: createStateOperator(removeOneMutably),\n            removeMany: createStateOperator(removeManyMutably),\n            map: createStateOperator(mapMutably),\n        };\n    }\n\n    var __values$1 = (undefined && undefined.__values) || function (o) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n        if (m) return m.call(o);\n        return {\n            next: function () {\n                if (o && i >= o.length) o = void 0;\n                return { value: o && o[i++], done: !o };\n            }\n        };\n    };\n    function createSortedStateAdapter(selectId, sort) {\n        var _a = createUnsortedStateAdapter(selectId), removeOne = _a.removeOne, removeMany = _a.removeMany, removeAll = _a.removeAll;\n        function addOneMutably(entity, state) {\n            return addManyMutably([entity], state);\n        }\n        function addManyMutably(newModels, state) {\n            var models = newModels.filter(function (model) { return !(selectIdValue(model, selectId) in state.entities); });\n            if (models.length === 0) {\n                return DidMutate.None;\n            }\n            else {\n                merge(models, state);\n                return DidMutate.Both;\n            }\n        }\n        function addAllMutably(models, state) {\n            state.entities = {};\n            state.ids = [];\n            addManyMutably(models, state);\n            return DidMutate.Both;\n        }\n        function updateOneMutably(update, state) {\n            return updateManyMutably([update], state);\n        }\n        function takeUpdatedModel(models, update, state) {\n            if (!(update.id in state.entities)) {\n                return false;\n            }\n            var original = state.entities[update.id];\n            var updated = Object.assign({}, original, update.changes);\n            var newKey = selectIdValue(updated, selectId);\n            delete state.entities[update.id];\n            models.push(updated);\n            return newKey !== update.id;\n        }\n        function updateManyMutably(updates, state) {\n            var models = [];\n            var didMutateIds = updates.filter(function (update) { return takeUpdatedModel(models, update, state); }).length >\n                0;\n            if (models.length === 0) {\n                return DidMutate.None;\n            }\n            else {\n                var originalIds_1 = state.ids;\n                var updatedIndexes_1 = [];\n                state.ids = state.ids.filter(function (id, index) {\n                    if (id in state.entities) {\n                        return true;\n                    }\n                    else {\n                        updatedIndexes_1.push(index);\n                        return false;\n                    }\n                });\n                merge(models, state);\n                if (!didMutateIds &&\n                    updatedIndexes_1.every(function (i) { return state.ids[i] === originalIds_1[i]; })) {\n                    return DidMutate.EntitiesOnly;\n                }\n                else {\n                    return DidMutate.Both;\n                }\n            }\n        }\n        function mapMutably(updatesOrMap, state) {\n            var updates = state.ids.reduce(function (changes, id) {\n                var change = updatesOrMap(state.entities[id]);\n                if (change !== state.entities[id]) {\n                    changes.push({ id: id, changes: change });\n                }\n                return changes;\n            }, []);\n            return updateManyMutably(updates, state);\n        }\n        function upsertOneMutably(entity, state) {\n            return upsertManyMutably([entity], state);\n        }\n        function upsertManyMutably(entities, state) {\n            var e_1, _a;\n            var added = [];\n            var updated = [];\n            try {\n                for (var entities_1 = __values$1(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                    var entity = entities_1_1.value;\n                    var id = selectIdValue(entity, selectId);\n                    if (id in state.entities) {\n                        updated.push({ id: id, changes: entity });\n                    }\n                    else {\n                        added.push(entity);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            var didMutateByUpdated = updateManyMutably(updated, state);\n            var didMutateByAdded = addManyMutably(added, state);\n            switch (true) {\n                case didMutateByAdded === DidMutate.None &&\n                    didMutateByUpdated === DidMutate.None:\n                    return DidMutate.None;\n                case didMutateByAdded === DidMutate.Both ||\n                    didMutateByUpdated === DidMutate.Both:\n                    return DidMutate.Both;\n                default:\n                    return DidMutate.EntitiesOnly;\n            }\n        }\n        function merge(models, state) {\n            models.sort(sort);\n            var ids = [];\n            var i = 0;\n            var j = 0;\n            while (i < models.length && j < state.ids.length) {\n                var model = models[i];\n                var modelId = selectIdValue(model, selectId);\n                var entityId = state.ids[j];\n                var entity = state.entities[entityId];\n                if (sort(model, entity) <= 0) {\n                    ids.push(modelId);\n                    i++;\n                }\n                else {\n                    ids.push(entityId);\n                    j++;\n                }\n            }\n            if (i < models.length) {\n                state.ids = ids.concat(models.slice(i).map(selectId));\n            }\n            else {\n                state.ids = ids.concat(state.ids.slice(j));\n            }\n            models.forEach(function (model, i) {\n                state.entities[selectId(model)] = model;\n            });\n        }\n        return {\n            removeOne: removeOne,\n            removeMany: removeMany,\n            removeAll: removeAll,\n            addOne: createStateOperator(addOneMutably),\n            updateOne: createStateOperator(updateOneMutably),\n            upsertOne: createStateOperator(upsertOneMutably),\n            addAll: createStateOperator(addAllMutably),\n            addMany: createStateOperator(addManyMutably),\n            updateMany: createStateOperator(updateManyMutably),\n            upsertMany: createStateOperator(upsertManyMutably),\n            map: createStateOperator(mapMutably),\n        };\n    }\n\n    var __assign$1 = (undefined && undefined.__assign) || function () {\n        __assign$1 = Object.assign || function(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                    t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign$1.apply(this, arguments);\n    };\n    function createEntityAdapter(options) {\n        if (options === void 0) { options = {}; }\n        var _a = __assign$1({ sortComparer: false, selectId: function (instance) { return instance.id; } }, options), selectId = _a.selectId, sortComparer = _a.sortComparer;\n        var stateFactory = createInitialStateFactory();\n        var selectorsFactory = createSelectorsFactory();\n        var stateAdapter = sortComparer\n            ? createSortedStateAdapter(selectId, sortComparer)\n            : createUnsortedStateAdapter(selectId);\n        return __assign$1({ selectId: selectId,\n            sortComparer: sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n    }\n\n    var Dictionary = /** @class */ (function () {\n        function Dictionary() {\n        }\n        return Dictionary;\n    }());\n\n    /**\n     * DO NOT EDIT\n     *\n     * This file is automatically generated at build\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.createEntityAdapter = createEntityAdapter;\n    exports.Dictionary = Dictionary;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=entity.umd.js.map\n"]}