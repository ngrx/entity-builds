{"version":3,"file":"entity.js","sources":["../../../modules/entity/src/create_adapter.ts","../../../modules/entity/src/sorted_state_adapter.ts","../../../modules/entity/src/unsorted_state_adapter.ts","../../../modules/entity/src/state_adapter.ts","../../../modules/entity/src/state_selectors.ts","../../../modules/entity/src/entity_state.ts"],"sourcesContent":["import { createSelector } from '@ngrx/store';\nimport {\n  EntityDefinition,\n  Comparer,\n  IdSelector,\n  EntityAdapter,\n} from './models';\nimport { createInitialStateFactory } from './entity_state';\nimport { createSelectorsFactory } from './state_selectors';\nimport { createSortedStateAdapter } from './sorted_state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n\nexport function createEntityAdapter<T>(\n  options: {\n    selectId?: IdSelector<T>;\n    sortComparer?: false | Comparer<T>;\n  } = {}\n): EntityAdapter<T> {\n  const { selectId, sortComparer }: EntityDefinition<T> = {\n    sortComparer: false,\n    selectId: (instance: any) => instance.id,\n    ...options,\n  };\n\n  const stateFactory = createInitialStateFactory<T>();\n  const selectorsFactory = createSelectorsFactory<T>();\n  const stateAdapter = sortComparer\n    ? createSortedStateAdapter(selectId, sortComparer)\n    : createUnsortedStateAdapter(selectId);\n\n  return {\n    ...stateFactory,\n    ...selectorsFactory,\n    ...stateAdapter,\n  };\n}\n","import {\n  EntityState,\n  IdSelector,\n  Comparer,\n  Dictionary,\n  EntityStateAdapter,\n  Update,\n} from './models';\nimport { createStateOperator } from './state_adapter';\nimport { createUnsortedStateAdapter } from './unsorted_state_adapter';\n\nexport function createSortedStateAdapter<T>(\n  selectId: IdSelector<T>,\n  sort: Comparer<T>\n): EntityStateAdapter<T>;\nexport function createSortedStateAdapter<T>(selectId: any, sort: any): any {\n  type R = EntityState<T>;\n\n  const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(\n    selectId\n  );\n\n  function addOneMutably(entity: T, state: R): boolean;\n  function addOneMutably(entity: any, state: any): boolean {\n    return addManyMutably([entity], state);\n  }\n\n  function addManyMutably(newModels: T[], state: R): boolean;\n  function addManyMutably(newModels: any[], state: any): boolean {\n    const models = newModels.filter(\n      model => !(selectId(model) in state.entities)\n    );\n\n    return merge(models, state);\n  }\n\n  function addAllMutably(models: T[], state: R): boolean;\n  function addAllMutably(models: any[], state: any): boolean {\n    state.entities = {};\n    state.ids = [];\n\n    addManyMutably(models, state);\n\n    return true;\n  }\n\n  function updateOneMutably(update: Update<T>, state: R): boolean;\n  function updateOneMutably(update: any, state: any): boolean {\n    return updateManyMutably([update], state);\n  }\n\n  function takeUpdatedModel(models: T[], update: Update<T>, state: R): void;\n  function takeUpdatedModel(models: any[], update: any, state: any): void {\n    if (!(update.id in state.entities)) {\n      return;\n    }\n\n    const original = state.entities[update.id];\n    const updated = Object.assign({}, original, update.changes);\n\n    delete state.entities[update.id];\n\n    models.push(updated);\n  }\n\n  function updateManyMutably(updates: Update<T>[], state: R): boolean;\n  function updateManyMutably(updates: any[], state: any): boolean {\n    const models: T[] = [];\n\n    updates.forEach(update => takeUpdatedModel(models, update, state));\n\n    if (models.length) {\n      state.ids = state.ids.filter((id: any) => id in state.entities);\n    }\n\n    return merge(models, state);\n  }\n\n  function merge(models: T[], state: R): boolean;\n  function merge(models: any[], state: any): boolean {\n    if (models.length === 0) {\n      return false;\n    }\n\n    models.sort(sort);\n\n    const ids: any[] = [];\n\n    let i = 0;\n    let j = 0;\n\n    while (i < models.length && j < state.ids.length) {\n      const model = models[i];\n      const modelId = selectId(model);\n      const entityId = state.ids[j];\n      const entity = state.entities[entityId];\n\n      if (sort(model, entity) <= 0) {\n        ids.push(modelId);\n        i++;\n      } else {\n        ids.push(entityId);\n        j++;\n      }\n    }\n\n    if (i < models.length) {\n      state.ids = ids.concat(models.slice(i).map(selectId));\n    } else {\n      state.ids = ids.concat(state.ids.slice(j));\n    }\n\n    models.forEach((model, i) => {\n      state.entities[selectId(model)] = model;\n    });\n\n    return true;\n  }\n\n  return {\n    removeOne,\n    removeMany,\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    addAll: createStateOperator(addAllMutably),\n    addMany: createStateOperator(addManyMutably),\n    updateMany: createStateOperator(updateManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter, IdSelector, Update } from './models';\nimport { createStateOperator } from './state_adapter';\n\nexport function createUnsortedStateAdapter<T>(\n  selectId: IdSelector<T>\n): EntityStateAdapter<T>;\nexport function createUnsortedStateAdapter<T>(selectId: IdSelector<T>): any {\n  type R = EntityState<T>;\n\n  function addOneMutably(entity: T, state: R): boolean;\n  function addOneMutably(entity: any, state: any): boolean {\n    const key = selectId(entity);\n\n    if (key in state.entities) {\n      return false;\n    }\n\n    state.ids.push(key);\n    state.entities[key] = entity;\n\n    return true;\n  }\n\n  function addManyMutably(entities: T[], state: R): boolean;\n  function addManyMutably(entities: any[], state: any): boolean {\n    let didMutate = false;\n\n    for (let index in entities) {\n      didMutate = addOneMutably(entities[index], state) || didMutate;\n    }\n\n    return didMutate;\n  }\n\n  function addAllMutably(entities: T[], state: R): boolean;\n  function addAllMutably(entities: any[], state: any): boolean {\n    state.ids = [];\n    state.entities = {};\n\n    addManyMutably(entities, state);\n\n    return true;\n  }\n\n  function removeOneMutably(key: T, state: R): boolean;\n  function removeOneMutably(key: any, state: any): boolean {\n    return removeManyMutably([key], state);\n  }\n\n  function removeManyMutably(keys: T[], state: R): boolean;\n  function removeManyMutably(keys: any[], state: any): boolean {\n    const didMutate =\n      keys\n        .filter(key => key in state.entities)\n        .map(key => delete state.entities[key]).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.filter((id: any) => id in state.entities);\n    }\n\n    return didMutate;\n  }\n\n  function removeAll<S extends R>(state: S): S;\n  function removeAll<S extends R>(state: any): S {\n    return Object.assign({}, state, {\n      ids: [],\n      entities: {},\n    });\n  }\n\n  function takeNewKey(\n    keys: { [id: string]: string },\n    update: Update<T>,\n    state: R\n  ): void;\n  function takeNewKey(\n    keys: { [id: string]: any },\n    update: Update<T>,\n    state: any\n  ): void {\n    const original = state.entities[update.id];\n    const updated: T = Object.assign({}, original, update.changes);\n    const newKey = selectId(updated);\n\n    if (newKey !== update.id) {\n      keys[update.id] = newKey;\n      delete state.entities[update.id];\n    }\n\n    state.entities[newKey] = updated;\n  }\n\n  function updateOneMutably(update: Update<T>, state: R): boolean;\n  function updateOneMutably(update: any, state: any): boolean {\n    return updateManyMutably([update], state);\n  }\n\n  function updateManyMutably(updates: Update<T>[], state: R): boolean;\n  function updateManyMutably(updates: any[], state: any): boolean {\n    const newKeys: { [id: string]: string } = {};\n\n    const didMutate =\n      updates\n        .filter(update => update.id in state.entities)\n        .map(update => takeNewKey(newKeys, update, state)).length > 0;\n\n    if (didMutate) {\n      state.ids = state.ids.map((id: any) => newKeys[id] || id);\n    }\n\n    return didMutate;\n  }\n\n  return {\n    removeAll,\n    addOne: createStateOperator(addOneMutably),\n    addMany: createStateOperator(addManyMutably),\n    addAll: createStateOperator(addAllMutably),\n    updateOne: createStateOperator(updateOneMutably),\n    updateMany: createStateOperator(updateManyMutably),\n    removeOne: createStateOperator(removeOneMutably),\n    removeMany: createStateOperator(removeManyMutably),\n  };\n}\n","import { EntityState, EntityStateAdapter } from './models';\n\nexport function createStateOperator<V, R>(\n  mutator: (arg: R, state: EntityState<V>) => boolean\n): EntityState<V>;\nexport function createStateOperator<V, R>(\n  mutator: (arg: any, state: any) => boolean\n): any {\n  return function operation<S extends EntityState<V>>(arg: R, state: any): S {\n    const clonedEntityState: EntityState<V> = {\n      ids: [...state.ids],\n      entities: { ...state.entities },\n    };\n\n    const didMutate = mutator(arg, clonedEntityState);\n\n    if (didMutate) {\n      return Object.assign({}, state, clonedEntityState);\n    }\n\n    return state;\n  };\n}\n","import { createSelector } from '@ngrx/store';\nimport { EntityState, EntitySelectors, Dictionary } from './models';\n\nexport function createSelectorsFactory<T>() {\n  function getSelectors(): EntitySelectors<T, EntityState<T>>;\n  function getSelectors<V>(\n    selectState: (state: V) => EntityState<T>\n  ): EntitySelectors<T, V>;\n  function getSelectors(\n    selectState?: (state: any) => EntityState<T>\n  ): EntitySelectors<T, any> {\n    const selectIds = (state: any) => state.ids;\n    const selectEntities = (state: EntityState<T>) => state.entities;\n    const selectAll = createSelector(\n      selectIds,\n      selectEntities,\n      (ids: T[], entities: Dictionary<T>): any =>\n        ids.map((id: any) => (entities as any)[id])\n    );\n\n    const selectTotal = createSelector(selectIds, ids => ids.length);\n\n    if (!selectState) {\n      return {\n        selectIds,\n        selectEntities,\n        selectAll,\n        selectTotal,\n      };\n    }\n\n    return {\n      selectIds: createSelector(selectState, selectIds),\n      selectEntities: createSelector(selectState, selectEntities),\n      selectAll: createSelector(selectState, selectAll),\n      selectTotal: createSelector(selectState, selectTotal),\n    };\n  }\n\n  return { getSelectors };\n}\n","import { EntityState } from './models';\n\nexport function getInitialEntityState<V>(): EntityState<V> {\n  return {\n    ids: [],\n    entities: {},\n  };\n}\n\nexport function createInitialStateFactory<V>() {\n  function getInitialState(): EntityState<V>;\n  function getInitialState<S extends object>(\n    additionalState: S\n  ): EntityState<V> & S;\n  function getInitialState(additionalState: any = {}): any {\n    return Object.assign(getInitialEntityState(), additionalState);\n  }\n\n  return { getInitialState };\n}\n"],"names":[],"mappings":"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"}